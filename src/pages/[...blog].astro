---
import { sortedPosts } from '@/utils/sort'
export async function getStaticPaths() {
  const posts = sortedPosts(await Astro.glob('../posts/*.{md,mdx}'))
  return posts.map(post => {
    return {
      params: {
        // these `.slice` calls are necessary and remove
        // the `/` from the beginning and end of the permalink
        blog: post.frontmatter.permalink.slice(1).slice(0, -1)
      },
      props: post
    }
  })
}
const { Content } = Astro.props
---

<Content />

<script>
window.addEventListener('DOMContentLoaded', () => {
  // When this script is executed for any blog posts that are written as .mdx format, the logic inside prepFootnotes() does not work for some reason.
  // But giving it a reasonable amount of delay ensures it consistently works for both .md and .mdx blog posts.
  // (reference: https://github.com/okTurtles/groupincome.org/pull/107#discussion_r1547356061)
  setTimeout(() => {
    prepFootnotes()

    const url = new URL(window.location.href)
    if (url.hash) {
      getAdjustedTargetPositionAndScroll(url.hash.slice(1))
    }
  }, 100)
})

// calculation helper functions
function calcFloatingContents (): number {
  // calculate the total height of the 'position: fixed' contents of the page.
  // currently there is two UI components like that:  'fundraiser-banner', 'header-toolbar'
  const floatingEls = ['.fundraiser', '.c-header-wrapper']
  let totalHeight = 0

  floatingEls.forEach(sel => {
    const el = document.querySelector(sel)

    if (el) {
      const bbox = el.getBoundingClientRect()
      totalHeight += bbox.height
    }
  })

  return totalHeight
}

function getAdjustedTargetPositionAndScroll (targetId: string): void {
  // get adjusted scroll-Y value of the target element of an anchor tag.
  // 'adjusted' here means subtracting the total heights of the floating contents of the page.
  const targetEl = document.querySelector(`#${targetId}`)

  if (targetEl) {
    const bbox = targetEl.getBoundingClientRect()
    const scrollToY = bbox.top + document.documentElement.scrollTop - calcFloatingContents()

    if(scrollToY > 0) {
      window.scrollTo({ top: scrollToY, behavior: 'instant' })
    }
  }
}

function prepFootnotes () {
  const footnoteEl = document.querySelector('section.footnotes')

  // NOTE:
  //  below is a logic to resolve a foonotes related bug(https://github.com/okTurtles/groupincome.org/issues/92)
  //  which is when links are clicked, the page is not scrolled to the correct positions.
  if (footnoteEl) {
    const footnoteAnchorSel = 'a[data-footnote-ref]' // selector for an anchor tag linked to a footnote.
    const footnoteBackSel = 'a[data-footnote-backref]' // selector for the 'back' anchor tag within a footnote.
    const footnoteAnchors = Array.from(document.querySelectorAll(footnoteAnchorSel)) as HTMLAnchorElement[]
    const footnoteBackEls = Array.from(document.querySelectorAll(footnoteBackSel)) as HTMLAnchorElement[]
    
    const addClickHandlerWithAdjustment = (aTag: HTMLAnchorElement) => {
      const href = aTag.href as string
      const targetId = href ? href.split('#')[1] : ''

      aTag.addEventListener('click', e => {
        e.preventDefault()

        getAdjustedTargetPositionAndScroll(targetId)
      })
    }

    footnoteAnchors.forEach(addClickHandlerWithAdjustment)
    footnoteBackEls.forEach(addClickHandlerWithAdjustment)
  }
}
</script>

<style lang="scss" is:global>
  @import "../styles/_variables";
  @import "../styles/_mixins";
  .c-blog-wrapper {
    .icon-link {
      display: none;
    }

    .alignright {
      float: right;
      margin: 0 0 1rem 1rem;
    }

    .alignleft {
      float: left;
      margin: 0 1rem 1rem 0;
    }

    .aligncenter {
      margin-left: auto;
      margin-right: auto;
    }
  
    .icon-link::before {
      font-family: "Font Awesome 5 Free";
    }
  
    ul, ol {
      margin: 1rem 0 1.5rem 1rem;

      li {
        margin-left: 1.5rem;

        @include phone {
          margin-left: 1rem;
        }
      }
    }
  
    h1, h2, h3, h4, h5, h6 {
      font-weight: bold;
    }
  
    h1, h2{
      margin-top: 4rem;
    }
  
    h1, h2, h3, h4, h5, h6, p, li {
      margin-bottom: 1rem;
    }

    h2[id] { // is a selector for section title in the blog post
      padding-bottom: 0.5rem;
      border-bottom: 1px solid $divider_1;
      margin: 3rem 0 1.5rem;
    }
  
    a {
      @extend %link-style;
    }

    @keyframes link-hover-ani {
      0% { background-size: 100% 0.1em, 0 0.1em; }
      100% { background-size: 0 0.1em, 100% 0.1em; }
    }
  
    img {
      margin: 2rem 0;
    }
  
    table {
      margin: 1rem 0 3rem 0;
    }
  
    th {
      padding: 1rem;
      border-bottom: 2px solid #ddd;
    }
  
    td {
      padding: 1rem;
      border-bottom: 1px solid #ddd;
    }
  
    center {
      margin-bottom: 1rem;
    }
  
    ul {
      list-style-type: disc;
    }
  
    iframe {
      margin: 2rem auto;
      max-width: 100%;
    }
  
    blockquote {
      border-left: 5px solid rgba(0, 0, 0, .15);
      padding: 10px 18px;
      font-style: italic;
      margin: 0 0 1.5em;
  
      p:last-child {
        margin-bottom: 0;
      }
    }
  
    .gallery {
      display: flex;
      justify-content: space-around;
  
      img {
        min-width: 1px;
        padding: .3rem;
      }
    }

    /* footnotes adjustment / styling */
    .footnotes {
      margin-top: 4rem;
      padding-top: 2rem;
      border-top: 1px solid $divider_0;
      font-size: .8rem;

      ol {
        margin-left: 0;
      }

      a {
        font-size: inherit;
      }
    }
  }
  </style>
    
  <style lang="scss" scoped>
  @import "../styles/_variables";
  @import "../styles/_mixins";
  .c-header {
    display: flex;
    flex-direction: column;
    min-height: 32rem;
    justify-content: center;
  
    @include until($tablet) {
      min-height: auto;
      margin-top: 1rem;
      margin-bottom: 5rem;
    }
  }
  
  .c-header-image {
    width: 100%;
    height: 20rem;
    max-height: 44vw;
    object-fit: cover;
  }
  
  .grey-container {
    margin-bottom: 6rem;
  }
  
  section {
    @include until($desktop) {
      padding: 0 2rem;
    }
  }
  
  .c-info,
  .c-main-para {
    color: #939393;
  }
  
  .l-1-2 {
    min-height: 32rem;
  
    @include until($tablet) {
      display: flex;
      flex-direction: column-reverse;
      margin-top: 2rem;
    }
  }
  
  .l-1-1-1 {
    .c-article-image {
      background-color: #D0DEEA;
      border-radius: .5rem;
      width: 100%;
      aspect-ratio: 2 / 1;
      object-fit: cover;
    }
  }
  
  .c-article-image {
    background-color: #D0DEEA;
    border-radius: .5rem;
  }
  
  .c-blog-title,
  .c-main-title {
    margin: 1rem 0 1rem 0;
  }
  
  .c-blog-title {
    font-weight: 600;
  
    @include phone {
      line-height: 1.4;
    }
  }
  
  .c-main-title {
    font-size: 3.5rem;
  
    @include until($desktop) {
      font-size: 3rem;
      line-height: 1.2;
    }
  
    @include phone {
      font-size: 2.25rem;
    }
  }
  
  .c-info {
    font-weight: .5rem;
    margin: 1rem 0 3rem 0;
  
    time::before {
      content: ' â€¢ ';
    }
  }
  
  .c-article {
    border-bottom: 1px solid #D0DEEA;
    padding-bottom: 2rem;
    margin-bottom: 5rem;
  
    p {
      margin-bottom: 1.5rem;
    }
  
    img {
      margin: 2rem auto;
    }
  
    h2 {
      font-size: 2rem;
      font-weight: 600;
    }
  }
  
  .c-article-link {
    display: flex;
    align-items: flex-start;
  
    strong {
      color: #0AA5DE;
      size: $size_4;
    }
  
    img {
      width: 16rem;
      height: auto;
      max-width: 100%;
      margin-right: 2rem;
      object-fit: cover;
    }
  
    .c-blog-title {
      max-width: 21rem;
      margin-top: .2rem;
      margin-bottom: -.5rem;
    }
  
    @include phone {
      flex-direction: column;
  
      img {
        width: 100%;
        margin-right: 0;
        margin-bottom: 2rem;
      }
    }
  }
</style>
