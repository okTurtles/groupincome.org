---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.vue';
import Footer from '../components/Footer.vue';
import PageWrapper from '../components/pageWrapper.vue';
import { SITE_TITLE, SITE_DESCRIPTION } from '../config';

export interface Props {
	title?: string;
	description?: string;
	image?: string;
}

const { title, description, image } = Astro.props;
const _title = title || SITE_TITLE;
const _description = description || SITE_DESCRIPTION;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<BaseHead title={_title} description={_description} image={image || ''} />
	</head>
	<body>
		<PageWrapper client:only="vue">
			<Header client:only="vue"  />
			<main>
				<slot />
			</main>
			<Footer client:only="vue" />
		</PageWrapper>
		<!-- Matomo -->
    <script>
      var _paq = window._paq = window._paq || [];
      /* tracker methods like "setCustomDimension" should be called before "trackPageView" */
      _paq.push(['trackPageView']);
      _paq.push(['enableLinkTracking']);
      (function() {
        var u="https://m.okturtles.org/";
        _paq.push(['setTrackerUrl', u+'matomo.php']);
        _paq.push(['setSiteId', '5']);
        var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];
        g.async=true; g.src=u+'matomo.js'; s.parentNode.insertBefore(g,s);
      })();
    </script>
    <noscript><p><img referrerpolicy="no-referrer-when-downgrade" src="https://m.okturtles.org/matomo.php?idsite=5&amp;rec=1" style="border:0;" alt="" /></p></noscript>
    <!-- End Matomo Code -->
	</body>
</html>

<script>
  // calculation helper functions
  function calcFloatingContents (): number {
    // calculate the total height of the 'position: fixed' contents of the page.
    // currently there is two UI components like that:  'fundraiser-banner', 'header-toolbar'
    const floatingEls = ['.fundraiser', '.c-header-wrapper']
    let totalHeight = 0

    floatingEls.forEach(sel => {
      const el = document.querySelector(sel)

      if (el) {
        const bbox = el.getBoundingClientRect()
        totalHeight += bbox.height
      }
    })

    return totalHeight + 20
  }

  function getAdjustedTargetPositionAndScroll (targetId: string): void {
    // get adjusted scroll-Y value of the target element of an anchor tag.
    // 'adjusted' here means subtracting the total heights of the floating contents of the page.
    const targetEl = document.querySelector(`#${targetId}`)

    if (targetEl) {
      const bbox = targetEl.getBoundingClientRect()
      const scrollToY = bbox.top - calcFloatingContents()

      if(scrollToY > 0) {
        window.scrollTo({ top: scrollToY, behavior: 'smooth' })
      }
    }
  }

  setTimeout(() => {
    const url = new URL(window.location.href)
    if (url.hash) {
      getAdjustedTargetPositionAndScroll(url.hash.slice(1))
    }
  }, 100)
</script>
